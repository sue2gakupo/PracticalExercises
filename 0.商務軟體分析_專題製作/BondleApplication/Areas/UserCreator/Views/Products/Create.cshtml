@model BondleApplication.Models.Product


@{
    ViewData["Title"] = "新增商品";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
           
            <h2>@ViewData["Title"]</h2>
        </div>
    </div>

 <product-form asp-for="@Model" form-action="Create" form-method="post">
        <validation-summary-enhanced exclude-property-errors="true" 
                                   container-class="alert alert-danger" 
                                   header-text="請修正以下錯誤：" />

        <div class="row">
            <!-- 主要商品資訊 -->
            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="card-header">
                        <h4>基本資訊</h4>
                    </div>
                    <div class="card-body">
                        <div class="form-group mb-3">
                            <label asp-for="ProductName" class="form-label" >商品名稱</label>
                            <input asp-for="ProductName" class="form-control" />
                            <span asp-validation-for="ProductName" class="text-danger"></span>
                        </div>       
                        <div class="form-group mb-3">
                            <label asp-for="Description" class="form-label">商品說明</label>
                            <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="Price" class="form-label">定價</label>
                                    <input asp-for="Price" class="form-control" type="number"  />
                                    <span asp-validation-for="Price" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="CategoryID" class="form-label">商品分類</label>
                                    <select asp-for="CategoryID" class="form-control" asp-items="ViewBag.CategoryList" ></select>
                                    <span asp-validation-for="CategoryID" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 商品圖片 -->
            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="card-header">
                        <h4>商品圖片</h4>
                    </div>
                    <div class="card-body">
                        <partial-loader controller="ProductImage"
                                        action="GetByProductID"
                                        product-id="0"
                                        container-id="productImagesContainer"
                                        loading-message="請先儲存商品基本資訊後再上傳圖片" />
                    </div>








                </div>
            </div>
        </div>

        <!-- Tab Navigation -->
        <div class="row">
            <div class="col-12">
                <ul class="nav nav-tabs" id="productTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="digital-tab" data-bs-toggle="tab" data-bs-target="#digital" type="button" role="tab">
                            數位商品
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="physical-tab" data-bs-toggle="tab" data-bs-target="#physical" type="button" role="tab">
                            實體商品
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="variations-tab" data-bs-toggle="tab" data-bs-target="#variations" type="button" role="tab">
                            商品款式
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="series-tab" data-bs-toggle="tab" data-bs-target="#series" type="button" role="tab">
                            商品系列
                        </button>
                    </li>
                </ul>

                <div class="tab-content mt-3" id="productTabContent">
                    <tab-panel tab-id="digital"
                               tab-title="數位商品"
                               is-active="true"
                               controller="DigitalProduct"
                               action="GetByProductId"
                               product-id="0">
                    </tab-panel>

                    <tab-panel tab-id="physical"
                               tab-title="實體商品"
                               is-active="false"
                               controller="PhysicalProduct"
                               action="GetByProductId"
                               product-id="0">
                    </tab-panel>

                    <tab-panel tab-id="variations"
                               tab-title="商品款式"
                               is-active="false"
                               controller="ProductVariation"
                               action="GetByProductId"
                               product-id="0">
                    </tab-panel>

                    <tab-panel tab-id="series"
                               tab-title="商品系列"
                               is-active="false"
                               controller="ProSeries"
                               action="GetByProductId"
                               product-id="0">
                    </tab-panel>
                </div>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-12">
                <button type="submit" class="btn btn-primary me-2">儲存商品</button>
                <a asp-action="Index" class="btn btn-secondary">取消</a>
            </div>
        </div>
    </product-form>
</div>

@section Scripts {
    <script src="~/js/product-management.js"></script>
    <script>
        $(document).ready(function() {
            // 初始化頁面特定邏輯
            initializeProductCreatePage();
        });

        function initializeProductCreatePage() {
            // 監聽主商品表單成功事件
            $(document).on('productSaved', function(e, productId) {
                console.log('Product saved with ID:', productId);
                updateTabProductIds(productId);
                updatePartialLoaderProductIds(productId);
            });

            // 表單驗證增強
            enhanceFormValidation();
            
            // 自動儲存草稿功能（可選）
            if (localStorage.getItem('enableAutoDraft') === 'true') {
                enableAutoDraft();
            }
        }

        function updateTabProductIds(productId) {
            $('.tab-pane').each(function() {
                $(this).attr('data-product-id', productId);
            });
        }

        function updatePartialLoaderProductIds(productId) {
            $('[data-product-id="0"]').each(function() {
                $(this).attr('data-product-id', productId);
                $(this).data('product-id', productId);
            });
        }

        function enhanceFormValidation() {
            // 即時驗證
            $('#mainProductForm input, #mainProductForm textarea, #mainProductForm select').on('blur', function() {
                const field = $(this);
                const value = field.val().trim();
                const isRequired = field.attr('required') || field.attr('data-required');
                
                if (isRequired && !value) {
                    showFieldError(field, '此欄位為必填');
                } else {
                    clearFieldError(field);
                }
            });

            // 價格驗證
            $('#Price').on('input', function() {
                const value = parseFloat($(this).val());
                if (value < 0) {
                    showFieldError($(this), '價格不能為負數');
                } else {
                    clearFieldError($(this));
                }
            });
        }

        function showFieldError(field, message) {
            const errorSpan = field.next('.text-danger');
            if (errorSpan.length) {
                errorSpan.text(message).show();
            }
            field.addClass('is-invalid');
        }

        function clearFieldError(field) {
            const errorSpan = field.next('.text-danger');
            if (errorSpan.length) {
                errorSpan.hide();
            }
            field.removeClass('is-invalid');
        }

        function enableAutoDraft() {
            let draftTimer;
            
            $('#mainProductForm').on('input change', function() {
                clearTimeout(draftTimer);
                draftTimer = setTimeout(() => {
                    saveDraft();
                }, 30000); // 30秒後自動儲存草稿
            });
        }

        function saveDraft() {
            const formData = $('#mainProductForm').serialize();
            localStorage.setItem('productDraft', formData);
            localStorage.setItem('productDraftTime', new Date().toISOString());
            
            // 顯示草稿已儲存提示
            if (typeof toastr !== 'undefined') {
                toastr.info('草稿已自動儲存', '', { timeOut: 2000 });
            }
        }

        function loadDraft() {
            const draft = localStorage.getItem('productDraft');
            const draftTime = localStorage.getItem('productDraftTime');
            
            if (draft && draftTime) {
                const timeDiff = new Date() - new Date(draftTime);
                const hoursDiff = timeDiff / (1000 * 60 * 60);
                
                if (hoursDiff < 24) { // 24小時內的草稿
                    if (confirm('發現未完成的商品草稿，是否要載入？')) {
                        // 解析並填入表單資料
                        const draftData = new URLSearchParams(draft);
                        draftData.forEach((value, key) => {
                            const field = $(`[name="${key}"]`);
                            if (field.length) {
                                if (field.is(':checkbox')) {
                                    field.prop('checked', value === 'true');
                                } else {
                                    field.val(value);
                                }
                            }
                        });
                    }
                }
            }
        }

        // 頁面離開時清理草稿
        $(window).on('beforeunload', function() {
            if (window.productManager && window.productManager.isMainProductSaved) {
                localStorage.removeItem('productDraft');
                localStorage.removeItem('productDraftTime');
            }
        });
    </script>
}

@* @section Styles {
    <style>
        .product-form-container {
            max-width: 100%;
        }

        .tab-content-container {
            min-height: 300px;
        }

        .variation-item {
            background-color: #f8f9fa;
            transition: all 0.3s ease;
        }

            .variation-item:hover {
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            }

        .image-upload-container {
            border: 2px dashed #dee2e6;
            border-radius: 0.375rem;
            padding: 1rem;
            transition: border-color 0.3s ease;
        }

            .image-upload-container:hover {
                border-color: #0d6efd;
            }

        .partial-container {
            position: relative;
        }

        .loading-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .form-group label.required::after {
            content: " *";
            color: #dc3545;
        }

        .is-invalid {
            border-color: #dc3545;
        }

        .card-header h4, .card-header h5 {
            margin-bottom: 0;
            color: #495057;
        }

        .nav-tabs .nav-link {
            border: 1px solid transparent;
            border-top-left-radius: 0.375rem;
            border-top-right-radius: 0.375rem;
        }

            .nav-tabs .nav-link:hover {
                border-color: #e9ecef #e9ecef #dee2e6;
                isolation: isolate;
            }

            .nav-tabs .nav-link.active {
                color: #495057;
                background-color: #fff;
                border-color: #dee2e6 #dee2e6 #fff;
            }

        .btn-group-sm > .btn, .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
            border-radius: 0.25rem;
        }

        .alert-info {
            color: #055160;
            background-color: #cff4fc;
            border-color: #b8daff;
        }

        .spinner-border-sm {
            width: 1rem;
            height: 1rem;
        }

        @media (max-width: 768px) {
            .container-fluid

        {
            padding-left: 10px;
            padding-right: 10px;
        }

        .col-md-6 {
            margin-bottom: 1rem;
        }

        .nav-tabs {
            flex-wrap: nowrap;
            overflow-x: auto;
        }

            .nav-tabs .nav-item {
                white-space: nowrap;
            }

        }

        /* 動畫效果 */
        .fade-in {
            animation: fadeIn 0.3s ease-in;
        }

        @keyframes fadeIn {
            from

        {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .slide-down {
            animation: slideDown 0.3s ease-out;
        }

        @keyframes slideDown {
            from

        {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }
    </style>
}
         *@



@* <h1>Create</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProductID" class="control-label"></label>
                <input asp-for="ProductID" class="form-control" />
                <span asp-validation-for="ProductID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductType" class="control-label"></label>
                <input asp-for="ProductType" class="form-control" />
                <span asp-validation-for="ProductType" class="text-danger"></span>
            </div>
          

            <div class="form-group">
                <label asp-for="LaunchDate" class="control-label"></label>
                <input asp-for="LaunchDate" class="form-control" />
                <span asp-validation-for="LaunchDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OfflineDate" class="control-label"></label>
                <input asp-for="OfflineDate" class="form-control" />
                <span asp-validation-for="OfflineDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SortOrder" class="control-label"></label>
                <input asp-for="SortOrder" class="form-control" />
                <span asp-validation-for="SortOrder" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PurchaseCount" class="control-label"></label>
                <input asp-for="PurchaseCount" class="form-control" />
                <span asp-validation-for="PurchaseCount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CreatorID" class="control-label"></label>
                <select asp-for="CreatorID" class ="form-control" asp-items="ViewBag.CreatorID"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div> *@

