@model GuestBooks.Models.Book

@{
    ViewData["Title"] = "Display";
}

<div>
    <h2>@Html.DisplayFor(modelItem => Model.Title)</h2>
    <div class="card mb-4">
       
        @if (Model.Photo != null)
        {
            <img src="~/SeedPhoto/@Model.Photo" class="img-fluid img-thumbnail" style="max-width:100%;height:auto;object-fit:contain;" />
        }
        <div class="card-body">


       
            <p>	@Html.Raw(Model.Description.Replace("\r\n", "<br>"))</p>
        </div>
        <div class="card-footer">
            <p class="text-end">
                @Html.DisplayFor(modelItem => Model.Author) 於 	@Html.DisplayFor(modelItem => Model.CreateDate)
            </p>
        </div>

    </div>
</div>
<hr />



<div id="ReBookList">
    @await Component.InvokeAsync("VCReBooks", new { bookID = Model.BookID })
</div>


@* <div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Photo)
        </dt>
        <dd class = "col-sm-10">
           
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Author)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreateDate)
        </dt>
        <dd class = "col-sm-10">
            
        </dd>
    </dl>
</div> *@
<div>
    <a asp-action="Edit" asp-route-id="@Model?.BookID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
